apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spicedb.fullname" . }}
  labels:
    {{- include "spicedb.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas | int64 }}
  selector:
    matchLabels:
      {{- include "spicedb.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: "25%"
      maxUnavailable: "25%"
    type: "RollingUpdate"
  progressDeadlineSeconds: 600
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "spicedb.selectorLabels" . | nindent 8 }}
    spec:
      dnsPolicy: "ClusterFirst"
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 30
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spicedb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
              {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "SPICEDB_GRPC_SHUTDOWN_GRACE_PERIOD"
              value: "1s"
            {{- if and .Values.grpc.enabled (not .Values.grpc.presharedKey) }}
            - name: SPICEDB_GRPC_PRESHARED_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ required "'grpc.presharedKeySecretName' is required" .Values.grpc.presharedKeySecretName }}
                  key: key
                  optional: false
            {{- end }}
            {{- if and (ne .Values.datastore.engine "memory") .Values.datastore.connection.uriSecretName }}
            - name: SPICEDB_DATASTORE_CONN_URI
              valueFrom:
                secretKeyRef:
                  name: {{ required "'datastore.connection.uriSecretName' is required" .Values.datastore.connection.uriSecretName }}
                  key: uri
                  optional: false
            {{- end }}
          args:
            - serve
            - --grpc-enabled={{ .Values.grpc.enabled }}
            - --http-enabled={{ .Values.http.enabled }}
            - --dispatch-cluster-enabled={{ .Values.dispatch.enabled }}
            - --metrics-enabled={{ .Values.metrics.enabled }}
            - --dashboard-enabled={{ .Values.dashboard.enabled }}
            - --datastore-engine={{ .Values.datastore.engine }}

            {{- if and (ne .Values.datastore.engine "memory") (not .Values.datastore.connection.uriSecretName) }}
            - --datastore-conn-uri={{ .Values.datastore.connection.uri }}
            {{- end }}

            {{- if and .Values.grpc.enabled (not .Values.grpc.presharedKeySecretName) }}
            - --grpc-preshared-key={{ required "'grpc.presharedKey' is required" .Values.grpc.presharedKey }}
            {{- end }}

            {{- if .Values.http.enabled }}
            {{- end }}

            {{- if .Values.dispatch.enabled }}
            - --dispatch-upstream-addr=kubernetes://{{ include "spicedb.fullname" . }}.{{ .Release.Namespace }}:{{ .Values.dispatch.port }}
            {{- end -}}

            {{- if .Values.metrics.enabled }}
            {{- end -}}

            {{- if .Values.dashboard.enabled }}
            {{- end }}

            {{- range $key, $value := .Values.extraArgs }}
            {{- if $value }}
            - --{{ $key }}={{ $value }}
            {{- else }}
            - --{{ $key }}
            {{- end }}
          ports:
            {{- if .Values.grpc.enabled }}
            - containerPort: {{ .Values.grpc.port }}
              protocol: TCP
              name: grpc
            {{- end }}
            {{- if .Values.http.enabled }}
            - containerPort: {{ .Values.http.port }}
              protocol: TCP
              name: http
            {{- end }}
            {{- if .Values.dashboard.enabled }}
            - containerPort: {{ .Values.dashboard.port }}
              protocol: TCP
              name: dashboard
            {{- end }}
            {{- if .Values.dispatch.enabled }}
            - containerPort: {{ .Values.dispatch.port }}
              protocol: TCP
              name: dispatch
            {{- end }}
            {{- if .Values.metrics.enabled }}
            - containerPort: {{ .Values.metrics.port }}
              protocol: TCP
              name: metrics
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            exec:
              command: ["grpc_health_probe", "-v", "-addr=localhost:50051"]
            failureThreshold: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
